services:
  flow-scheduler:
    container_name: flow-scheduler
    build:
      dockerfile_inline: |
        FROM ${REPOSITORY}/flow-scheduler:${FLOW_VERSION}
        RUN apk add py3-xmltodict py3-icalendar py3-shapely py3-geopy patch
        RUN pip3 install sweref99 pymssql --no-cache-dir --break-system-packages
        RUN pip3 install urllib3 -U --no-cache-dir --break-system-packages
        COPY storage.py.patch /
        RUN cd /opt/flow-scheduler/runner/python/library/api && patch -p0 </storage.py.patch
#    image: ${REPOSITORY}/flow-scheduler:${FLOW_VERSION}
    hostname: flow.scheduler
    restart: unless-stopped
    networks:
      - flow
      - traefik
    environment:
      - TZ=${TZ}
      - JAVA_OPTS=${JAVA_OPTS}
    labels:
      - traefik.enable=true
      - traefik.http.routers.Flow-Scheduler.entrypoints=https
      - traefik.http.routers.Flow-Scheduler.rule=(PathPrefix(`/api/scheduler`) || PathPrefix(`/api/services`) || PathPrefix(`/api/prometheus`) ) && Host(`${FLOW_DOMAIN}`)
      - traefik.http.routers.Flow-Scheduler.tls=true
      - traefik.http.routers.Flow-Scheduler.tls.certresolver=letsencrypt
      - traefik.http.services.Flow-Scheduler.loadbalancer.server.port=80    
    volumes:
      - /srv/docker/flow/config:/etc/flow
      - /srv/docker/flow/scheduler:/data
    depends_on:
      flow-auth:
        condition: service_healthy
      deepstream:
        condition: service_healthy
      postgresql:
        condition: service_started

  flow-runner:
    container_name: flow-runner
    build:
      dockerfile_inline: |
        FROM ${REPOSITORY}/flow-scheduler:${FLOW_VERSION}
        RUN apk add py3-xmltodict py3-icalendar py3-shapely py3-geopy patch
        RUN pip3 install sweref99 pymssql --no-cache-dir --break-system-packages
        RUN pip3 install urllib3 -U --no-cache-dir --break-system-packages
        COPY storage.py.patch /
        RUN cd /opt/flow-scheduler/runner/python/library/api && patch -p0 </storage.py.patch
#    image: ${REPOSITORY}/flow-scheduler:${FLOW_VERSION}
    hostname: flow.runner
    restart: unless-stopped
    networks:
      - flow
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.Flow-Runner.entrypoints=https
      - traefik.http.routers.Flow-Runner.rule=(PathPrefix(`/api/scheduler`) || PathPrefix(`/api/services`) || PathPrefix(`/api/prometheus`) ) && Host(`${FLOW_DOMAIN}`)
      - traefik.http.routers.Flow-Runner.tls=true
      - traefik.http.routers.Flow-Runner.tls.certresolver=letsencrypt
      - traefik.http.services.Flow-Runner.loadbalancer.server.port=80    
    environment:
      - TZ=${TZ}
      - JAVA_OPTS=${JAVA_OPTS}
      - SCHEDULER_SCHEDULER=false
    volumes:
      - /srv/docker/flow/config:/etc/flow
      - /srv/docker/flow/scheduler:/data
    depends_on:
      flow-auth:
        condition: service_healthy
      deepstream:
        condition: service_healthy
      postgresql:
        condition: service_started
