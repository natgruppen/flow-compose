services:
  access:
    container_name: access
    image: ${REPOSITORY}/access:${FLOW_VERSION}
    hostname: access
    restart: unless-stopped
    networks:
      - flow
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.Access.entrypoints=https
      - traefik.http.routers.Access.rule=PathPrefix(`/api/onapi`) && Host(`${ACCESS_DOMAIN}`)
      - traefik.http.routers.Access.tls=true
      - traefik.http.routers.Access.tls.certresolver=letsencrypt
      - traefik.http.services.Access.loadbalancer.server.port=8083
    environment:
#      - VIRTUAL_HOST=http://access.*/api/onapi/2.4/*,https://access.*/api/onapi/2.4/*,http://access.*/api/onapi/settings,https://access.*/api/onapi/settings,http://access.*/api/onapi/*,https://access.*/api/onapi/*
      - ENDPOINTS_LOCATION=
      - PASSWORD_RECOVERY_ENABLED=1
      - TICKETS_ENABLED=1
      - BILLING_EXPORT_ENABLED=1
      - TZ=${TZ}
      - JAVA_OPTS=${JAVA_OPTS}
    volumes:
      - /srv/docker/flow/config:/etc/flow

  access-gui:
    container_name: access-gui
    image: ${REPOSITORY}/access-gui:${FLOW_VERSION}
    restart: unless-stopped
    networks:
      - flow
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.Access-GUI.entrypoints=https
      - traefik.http.routers.Access-GUI.rule=Host(`${ACCESS_DOMAIN}`)
      - traefik.http.routers.Access-GUI.tls=true
      - traefik.http.services.Access-GUI.loadbalancer.server.port=80
      - traefik.http.routers.Access-GUI.tls.certresolver=letsencrypt
    environment:
      - TZ=${TZ}
    volumes:
      - /srv/docker/flow/config:/etc/flow
      - /srv/docker/flow/gui:/data
